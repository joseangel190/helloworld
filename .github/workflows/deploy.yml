name: CI/CD App

on:
  workflow_dispatch:

env:
  RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}
  CLUSTER_NAME: ${{ vars.CLUSTER_NAME }}
  
jobs:
  build:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
      - name: Build with Maven
        run: mvn clean install package
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.ACR_SERVER }}/${{ github.event.repository.name }}:${{ github.sha }} . && docker build -t ${{ secrets.ACR_SERVER }}/${{ github.event.repository.name }}:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.ACR_SERVER }}/${{ github.event.repository.name }}:${{ github.sha }} && docker push ${{ secrets.ACR_SERVER }}/${{ github.event.repository.name }}:latest

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: azure/setup-kubectl@v4
      - uses: azure/login@v2
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      - name: Set up Kubernetes tools
        run: |
          az aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME
          kubectl config view
      - uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.24'
      - name: Use kubelogin with spn method
        run: |
          kubelogin convert-kubeconfig -l spn --client-id ${{ secrets.AZURE_CLIENT_ID }} --client-secret ${{ secrets.AZURE_CLIENT_SECRET }} --tenant-id ${{ secrets.AZURE_TENANT_ID }}
      - name: Deploy to AKS
        run: |
          set +e
          kubectl delete -f ${{ github.workspace }}/k8s/aks-main.yml
          kubectl apply -f ${{ github.workspace }}/k8s/aks-main.yml
          set +e
      - name: Get Kubernetes resources
        run: |
          sleep 120 
          echo "" && echo "===========> POD" && echo "" && kubectl get pod -n helloworld && \
          echo "" && echo "===========> DEPLOYMENT" && echo "" && kubectl get deployment -n helloworld && \
          echo "" && echo "===========> SERVICE" && echo "" && kubectl get service -n helloworld && \
          echo "" && echo "===========> INGRESS" && echo "" && kubectl get ingress -n helloworld && \
          echo "" && echo "===========> HPA" && echo "" && kubectl get hpa -n helloworld
        shell: bash
